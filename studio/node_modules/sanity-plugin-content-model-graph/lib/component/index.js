'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _templateObject = _taggedTemplateLiteral(['\n  background-color: white;\n  padding: 1rem;\n\n  svg {\n    display: block;\n    max-width: 1500px;\n  }\n'], ['\n  background-color: white;\n  padding: 1rem;\n\n  svg {\n    display: block;\n    max-width: 1500px;\n  }\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n'], ['\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n']);

var _full = require('viz.js/full.render');

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _fileSaver = require('file-saver');

var _fileSaver2 = _interopRequireDefault(_fileSaver);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _viz = require('viz.js');

var _viz2 = _interopRequireDefault(_viz);

var _getEdgesFromTypes = require('./utils/get-edges-from-types');

var _getEdgesFromTypes2 = _interopRequireDefault(_getEdgesFromTypes);

var _getNodesFromTypes = require('./utils/get-nodes-from-types');

var _getNodesFromTypes2 = _interopRequireDefault(_getNodesFromTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var newLine = '\n';

var header = ['strict digraph ContentModel {', 'node [fontname="inherit"];', 'edge [fontname="inherit"];', 'rankdir="LR"', 'concentrate="true"'];

var Container = _styledComponents2.default.div(_templateObject);

var Wrapper = _styledComponents2.default.div(_templateObject2);

var footer = ['}'];

var removeExplicitDimensions = function removeExplicitDimensions(svgHtml) {
  return _lodash2.default.replace(svgHtml, /width="(.*?)" height="(.*?)"/, 'width="100%" height="100%"');
};

var handleSave = function handleSave(_ref) {
  var content = _ref.content,
      fileType = _ref.fileType,
      mimeType = _ref.mimeType;

  var blob = new Blob([content], { type: mimeType + ';charset=utf-8' });
  _fileSaver2.default.saveAs(blob, 'content-model.' + fileType);
};

var ContentModelGraph = function ContentModelGraph(_ref2) {
  var Button = _ref2.Button,
      Switch = _ref2.Switch,
      types = _ref2.types;

  var viz = new _viz2.default({ Module: _full.Module, render: _full.render });

  var _useState = (0, _react.useState)(''),
      _useState2 = _slicedToArray(_useState, 2),
      svgString = _useState2[0],
      setSvgString = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      isShowingFields = _useState4[0],
      setIsShowingFields = _useState4[1];

  var _useState5 = (0, _react.useState)(false),
      _useState6 = _slicedToArray(_useState5, 2),
      isShowingEdgeLabels = _useState6[0],
      setIsShowingEdgeLabels = _useState6[1];

  var edges = (0, _getEdgesFromTypes2.default)(types, isShowingEdgeLabels);
  var nodes = (0, _getNodesFromTypes2.default)(types, isShowingFields);

  var allItems = [header, edges, nodes, footer];

  var graphVizString = _lodash2.default.invokeMap(allItems, 'join', newLine).join(newLine);

  viz.renderString(graphVizString).then(setSvgString).catch(setSvgString);

  var fileDefinitions = [{ content: svgString, fileType: 'svg', mimeType: 'image/svg+xml' }, { content: graphVizString, fileType: 'gv', mimeType: 'application/octet-stream' }];
  return _react2.default.createElement(
    Container,
    null,
    _react2.default.createElement(
      'h1',
      null,
      'Content Model Graph'
    ),
    _react2.default.createElement(Switch, { checked: isShowingFields, label: 'Show fields', onChange: function onChange() {
        return setIsShowingFields(!isShowingFields);
      } }),
    _react2.default.createElement(Switch, {
      checked: isShowingEdgeLabels,
      label: 'Show edge labels',
      onChange: function onChange() {
        return setIsShowingEdgeLabels(!isShowingEdgeLabels);
      }
    }),
    _lodash2.default.map(fileDefinitions, function (item) {
      return _react2.default.createElement(
        Button,
        { key: item.fileType, type: 'button', onClick: function onClick() {
            return handleSave(item);
          } },
        'Save .',
        item.fileType
      );
    }),
    _react2.default.createElement(Wrapper
    // eslint-disable-next-line react/no-danger
    , { dangerouslySetInnerHTML: {
        __html: removeExplicitDimensions(svgString)
      }
    })
  );
};

ContentModelGraph.propTypes = {
  Button: _propTypes2.default.elementType.isRequired,
  Switch: _propTypes2.default.elementType.isRequired,
  types: _propTypes2.default.arrayOf(_propTypes2.default.shape({}).isRequired).isRequired
};

exports.default = ContentModelGraph;