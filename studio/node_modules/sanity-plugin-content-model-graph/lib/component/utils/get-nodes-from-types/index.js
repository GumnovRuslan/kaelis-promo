'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _getNameForType = require('../get-name-for-type');

var _getNameForType2 = _interopRequireDefault(_getNameForType);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var typeToNode = function typeToNode(isShowingFields) {
  return function (type) {
    return '"' + type.name + '" [ label=<<font face="Helvetica Neue"><table border="1" cellpadding="8" cellspacing="0"><tr><td ' + (isShowingFields ? 'bgcolor="mediumorchid"' : 'bgcolor="ghostwhite"') + ' border="0" port="root"><font ' + (isShowingFields ? 'color="white"' : '') + ' point-size="18">' + (0, _getNameForType2.default)(type) + '</font></td></tr>' + _lodash2.default.map(isShowingFields ? type.fields : [], function (field) {
      return '<tr><td align="left" border="0" bgcolor="white" port="' + field.name + '">' + (0, _getNameForType2.default)(field) + '</td></tr>';
    }).join('') + '</table></font>> shape="none"]';
  };
};

/**
 * @param {any} types - The array of types for this document.
 * @param {boolean} isShowingFields - Whether to show the fields or just the document name.
 */
var getNodesFromTypes = function getNodesFromTypes(types, isShowingFields) {
  return _lodash2.default.map(types, typeToNode(isShowingFields));
};

exports.default = getNodesFromTypes;